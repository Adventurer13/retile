#########################################
#
# Retile AI Events
# Author: Gebnar
#
#########################################

namespace = retile_ai

# Flag AI countries based on their needs
country_event = {
	id = retile_ai.1
	hide_window = yes

	trigger = {
		is_ai = yes
		OR = {
			is_country_type = default
			#is_country_type = awakened_marauders
			#is_country_type = awakened_fallen_empire
		}
	}
	
	mean_time_to_happen = {
		days = 60
	}

	immediate = {
		remove_country_flag = retile_ai_needs_energy
		remove_country_flag = retile_ai_needs_minerals
		remove_country_flag = retile_ai_needs_food
		remove_country_flag = retile_ai_needs_alloys
		remove_country_flag = retile_ai_needs_consumer_goods
		remove_country_flag = retile_ai_needs_science
		remove_country_flag = retile_ai_needs_energy_crisis
		remove_country_flag = retile_ai_needs_minerals_crisis
		remove_country_flag = retile_ai_needs_food_crisis
		remove_country_flag = retile_ai_needs_alloys_crisis
		remove_country_flag = retile_ai_needs_consumer_goods_crisis
		remove_country_flag = retile_ai_needs_science_crisis
		remove_country_flag = retile_ai_needs_admin
		remove_country_flag = retile_ai_needs_admin_crisis
		remove_country_flag = retile_ai_needs_admin_excess
		
		if = {
			limit = { is_country_type = default }
			### Set sprawl flags
			set_variable = { which = retile_admin_size value = 0 }	# Count empire size
			every_owned_starbase = {				# sprawl from systems
				root = {
					change_variable = { which = retile_admin_size value = 2 }
				}
			}
			every_owned_planet = {				# sprawl from colonies
				root = {
					change_variable = { which = retile_admin_size value = 10 }
				}
			}
			if = {								# sprawl from branch offices
				limit = { has_authority = auth_corporate }
				set_variable = { which = retile_admin_size_branch value = 0 }
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_same_value = root }
					}
					every_owned_planet = {
						limit = {
							has_branch_office = yes
							branch_office_owner = { is_same_value = root }
						}
						root = {
							change_variable = { which = retile_admin_size_branch value = 1 }
						}
					}
				}
				if = {
					limit = { has_civic = civic_franchising }
					multiply_variable = { which = retile_admin_size_branch value = 0.5 }
				}
				change_variable = { which = retile_admin_size value = retile_admin_size_branch }
			}

			set_variable = { which = retile_admin_cap value = 15 }	# Count admin cap		
			if = {
				limit = { has_ascension_perk = ap_interstellar_dominion }
				change_variable = { which = retile_admin_cap value = 15 }
			}
			if = {
				limit = { has_ascension_perk = ap_imperial_prerogative }
				change_variable = { which = retile_admin_cap value = 15 }
			}
			if = {
				limit = { has_ethic = ethic_xenophobe }
				change_variable = { which = retile_admin_cap value = 5 }
			}
			if = {
				limit = { has_ethic = ethic_fanatic_xenophobe }
				change_variable = { which = retile_admin_cap value = 10 }
			}
			if = {
				limit = { has_authority = auth_corporate }
				change_variable = { which = retile_admin_cap value = 10 }
			}
			if = {
				limit = { has_civic = civic_efficient_bureaucracy }
				change_variable = { which = retile_admin_cap value = 15 }
			}
			if = {
				limit = { has_civic = civic_hive_divided_attention }
				change_variable = { which = retile_admin_cap value = 10 }
			}
			if = {
				limit = { has_civic = civic_private_prospectors }
				change_variable = { which = retile_admin_cap value = 5 }
			}
			if = {
				limit = { has_modifier = oracle_administration }
				change_variable = { which = retile_admin_cap value = 10 }
			}
			if = {
				limit = { has_technology = tech_adaptive_bureaucracy }
				change_variable = { which = retile_admin_cap value = 5 }
			}
			if = {
				limit = { has_technology = tech_colonial_bureaucracy }
				change_variable = { which = retile_admin_cap value = 5 }
			}
			if = {
				limit = { has_technology = tech_galactic_bureaucracy }
				change_variable = { which = retile_admin_cap value = 5 }
			}
			every_owned_pop = {
				limit = { has_job = bureaucrat }
				root = {
					change_variable = { which = retile_admin_cap value = 4 }
					if = {
						limit = { has_valid_civic = civic_efficient_bureaucracy }
						change_variable = { which = retile_admin_cap value = 2 }
					}
					if = {
						limit = {
							OR = {
								has_policy_flag = xenodiplomacy_assembly
								has_policy_flag = xenodiplomacy_magistrate
								has_policy_flag = xenodiplomacy_gunboat
								has_policy_flag = xenodiplomacy_embassy
								has_policy_flag = xenodiplomacy_pr
								has_policy_flag = xenodiplomacy_lr
							}
						}
						change_variable = { which = retile_admin_cap value = -2 }
					}
				}
			}
			
			# do math, set flags
			subtract_variable = { which = retile_admin_cap value = retile_admin_size }
			
			if = {
				limit = {
					check_variable = { which = retile_admin_cap value < 0 }
				}
				set_country_flag = retile_ai_needs_admin
			}
			if = {
				limit = {
					check_variable = { which = retile_admin_cap value < -50 }
				}
				set_country_flag = retile_ai_needs_admin_crisis
			}
			if = {
				limit = {
					check_variable = { which = retile_admin_cap value > 50 }
				}
				set_country_flag = retile_ai_needs_admin_excess
			}
		}
		
		### Set resource flags
		if = {
			limit = {
				has_monthly_income = { resource = energy value < @retile_ai_energy_income_high }
			}
			set_country_flag = retile_ai_needs_energy
		}
		if = {
			limit = {
				has_monthly_income = { resource = energy value < @retile_ai_energy_income_low }
			}
			set_country_flag = retile_ai_needs_energy_crisis
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value < @retile_ai_minerals_income_high }
			}
			set_country_flag = retile_ai_needs_minerals
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value < @retile_ai_minerals_income_low }
			}
			set_country_flag = retile_ai_needs_minerals_crisis
		}
		if = {
			limit = {
				has_monthly_income = { resource = food value < @retile_ai_food_income_high }
			}
			set_country_flag = retile_ai_needs_food
		}
		if = {
			limit = {
				has_monthly_income = { resource = food value < @retile_ai_food_income_low }
			}
			set_country_flag = retile_ai_needs_food_crisis
		}
		if = {
			limit = {
				has_monthly_income = { resource = alloys value < @retile_ai_alloys_income_high }
			}
			set_country_flag = retile_ai_needs_alloys
		}
		if = {
			limit = {
				has_monthly_income = { resource = alloys value < @retile_ai_alloys_income_low }
			}
			set_country_flag = retile_ai_needs_alloys_crisis
		}
		if = {
			limit = {
				has_monthly_income = { resource = consumer_goods value < @retile_ai_consumer_goods_income_high }
			}
			set_country_flag = retile_ai_needs_consumer_goods
		}
		if = {
			limit = {
				has_monthly_income = { resource = consumer_goods value < @retile_ai_consumer_goods_income_low }
			}
			set_country_flag = retile_ai_needs_consumer_goods_crisis
		}
		if = {
			limit = { retile_ai_has_resource_crisis = no }
			set_country_flag = retile_ai_needs_science
		}
	}
}

# Flag AI planets for specific kinds of urban development
country_event = {
	id = retile_ai.2
	hide_window = yes

	trigger = {
		always = no
	#	is_ai = yes
	#	OR = {
	#		is_country_type = default
	#		is_country_type = awakened_marauders
	#		is_country_type = awakened_fallen_empire
	#	}
	}
	
	mean_time_to_happen = {
		months = 12
	}

	immediate = {
	}
}

# Remove excess jobs to help solve planetary crisis
planet_event = {
	id = retile_ai.100
	hide_window = yes

	trigger = {
		exists = owner
		owner = {
			is_ai = yes
			OR = {
				is_country_type = default
				is_country_type = awakened_marauders
			#	is_country_type = awakened_fallen_empire
			}
		}
		retile_ai_has_planet_crisis = yes
		free_jobs > 0
	}
	
	mean_time_to_happen = {
		months = 12
	}

	immediate = {
		if = { # maybe we can free up some bureaucrats?
			limit = {
				num_districts = { type = district_bureaucrats value > 0 }
			}
			remove_district = district_bureaucrats
		} else_if = { # maybe we can free up some soldiers?
			limit = {
				num_districts = { type = district_soldiers value > 0 }
				NAND = {
					planet_crime > 0
					owner = { has_policy_flag = criminal_military_police }
				}
			}
			remove_district = district_soldiers
		} else_if = { # maybe we can free up some custodians?
			limit = {
				num_districts = { type = district_custodians value > 0 }
				NOT = { planet_amenities > -100 }
			}
			remove_district = district_custodians
		} else_if = { # maybe we can free up some enforcers?
			limit = {
				num_districts = { type = district_enforcers value > 0 }
				NOT = { planet_crime > 0 }
			}
			remove_district = district_enforcers
		} else_if = { # any other excess trades for energy at 2-1, so try to remove energy first...
			limit = {
				any_deposit = { has_deposit_category = deposit_cat_energy_active }
				owner = { NOT = { has_country_flag = retile_ai_needs_energy_crisis } }
			}
			random_deposit = {
				limit = { has_deposit_category = deposit_cat_energy_active }
				clear_blocker = yes
			}
		} else_if = { # check for food next - we really want to save minerals if we can - they're how we build ourselves out of crisis.
			limit = {
				any_deposit = { has_deposit_category = deposit_cat_food_active }
				owner = { NOT = { has_country_flag = retile_ai_needs_food_crisis } }
			}
			random_deposit = {
				limit = { has_deposit_category = deposit_cat_food_active }
				clear_blocker = yes
			}
		} else_if = { # check for minerals, but less generously...
			limit = {
				any_deposit = { has_deposit_category = deposit_cat_minerals_active }
				owner = { NOT = { has_country_flag = retile_ai_needs_minerals } }
			}
			random_deposit = {
				limit = { has_deposit_category = deposit_cat_minerals_active }
				clear_blocker = yes
			}
		} else_if = { # check for engineering...
			limit = {
				num_districts = { type = district_engineers value > 0 }
				owner = { NOT = { has_country_flag = retile_ai_needs_alloys_crisis } }
				owner = { NOT = { has_country_flag = retile_ai_needs_consumer_goods } }
			}
			remove_district = district_engineers
		} else_if = { # scientists are always safe - and we've put them off as long as possible...
			limit = {
				num_districts = { type = district_scholars value > 0 }
			}
			remove_district = district_scholars
		} else_if = { ###################### OK, at this point we're out of "good" options. But if we want this planet back on track we gotta try something...
			limit = { # we could be more aggressive about minerals...
				any_deposit = { has_deposit_category = deposit_cat_minerals_active }
				owner = { NOT = { has_country_flag = retile_ai_needs_minerals_crisis } }
			}
			random_deposit = {
				limit = { has_deposit_category = deposit_cat_minerals_active }
				clear_blocker = yes
			}
		} else_if = { # we could be more aggressive about engineers...
			limit = {
				num_districts = { type = district_engineers value > 0 }
				owner = { NOT = { has_country_flag = retile_ai_needs_consumer_goods_crisis } }
			}
			remove_district = district_engineers
		} else = { # fuck it, we'll handle basic resources somewhere else maybe...
			random_deposit = {
				limit = { OR = {
					has_deposit_category = deposit_cat_energy_active
					has_deposit_category = deposit_cat_food_active
					has_deposit_category = deposit_cat_minerals_active
				} }
				clear_blocker = yes
			}
		}
	}
}



# Scrub resource buildings if the planet has no jobs of the appropriate type

# Scrub excess energy deposits
# also exploits energy deposits if needed.
country_event = {
	id = retile_ai.201
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_monthly_income = { resource = energy value > @retile_ai_energy_income_excess }
	}
	
	mean_time_to_happen = {
		months = 6
	}

	immediate = {
		if = {
			limit = {
				has_monthly_income = { resource = energy value > @retile_ai_energy_income_excess }
			}
			random_owned_planet = {
				limit = { any_deposit = { has_deposit_category = deposit_cat_energy_active } }
				random_deposit = {
					limit = { has_deposit_category = deposit_cat_energy_active }
					clear_blocker = yes
				}
			}
		} else_if = {
			limit = {
				OR = {
					has_monthly_income = { resource = energy value < @retile_ai_energy_income_low }
					AND = {
						always = no
						has_monthly_income = { resource = energy value < @retile_ai_energy_income_high }
						has_monthly_income = { resource = minerals value > @retile_ai_minerals_income_low }
						OR = {
							country_uses_food = no
							has_monthly_income = { resource = food value > @retile_ai_food_income_low }
						}
						has_monthly_income = { resource = alloys value > @retile_ai_alloys_income_low }
						has_monthly_income = { resource = consumer_goods value > @retile_ai_consumer_goods_income_low }
					}
				}
			}
			random_owned_planet = {
				limit = {
					any_deposit = { has_deposit_category = deposit_cat_energy }
					free_jobs < 4
				}
				random_deposit = {
					limit = { has_deposit_category = deposit_cat_energy }
					clear_blocker = yes
				}
			}
		}
	}
}

# Scrub excess minerals deposits
# also exploits minerals deposits if needed.
country_event = {
	id = retile_ai.202
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_monthly_income = { resource = minerals value > @retile_ai_minerals_income_excess }
	}
	
	mean_time_to_happen = {
		months = 6
	}

	immediate = {
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > @retile_ai_minerals_income_excess }
			}
			random_owned_planet = {
				limit = { any_deposit = { has_deposit_category = deposit_cat_minerals_active } }
				random_deposit = {
					limit = { has_deposit_category = deposit_cat_minerals_active }
					clear_blocker = yes
				}
			}
		} else_if = {
			limit = {
				OR = {
					has_monthly_income = { resource = minerals value < @retile_ai_minerals_income_low }
					AND = {
						always = no
						has_monthly_income = { resource = minerals value < @retile_ai_minerals_income_high }
						has_monthly_income = { resource = energy value > @retile_ai_energy_income_low }
						OR = {
							country_uses_food = no
							has_monthly_income = { resource = food value > @retile_ai_food_income_low }
						}
						has_monthly_income = { resource = alloys value > @retile_ai_alloys_income_low }
						has_monthly_income = { resource = consumer_goods value > @retile_ai_consumer_goods_income_low }
					}
				}
			}
			random_owned_planet = {
				limit = {
					any_deposit = { has_deposit_category = deposit_cat_minerals }
					free_jobs < 4
				}
				random_deposit = {
					limit = { has_deposit_category = deposit_cat_minerals }
					clear_blocker = yes
				}
			}
		}
	}
}

# Scrub excess food deposits
country_event = {
	id = retile_ai.203
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_monthly_income = { resource = food value > @retile_ai_food_income_excess }
	}
	
	mean_time_to_happen = {
		months = 6
	}

	immediate = {
		if = {
			limit = {
				NOT = { is_plantoid_empire = yes }
				has_monthly_income = { resource = food value > @retile_ai_food_income_excess }
			}
			random_owned_planet = {
				limit = { any_deposit = { has_deposit_category = deposit_cat_food_active } }
				random_deposit = {
					limit = { has_deposit_category = deposit_cat_food_active }
					clear_blocker = yes
				}
			}
		} else_if = {
			limit = {
				OR = {
					AND = {
						has_monthly_income = { resource = food value < @retile_ai_food_income_low }
					}
					AND = {
						always = no
						has_monthly_income = { resource = food value < @retile_ai_food_income_high }
						has_monthly_income = { resource = energy value > @retile_ai_energy_income_low }
						has_monthly_income = { resource = minerals value > @retile_ai_minerals_income_low }
						has_monthly_income = { resource = alloys value > @retile_ai_alloys_income_low }
						has_monthly_income = { resource = consumer_goods value > @retile_ai_consumer_goods_income_low }
					}
				}
			}
			random_owned_planet = {
				limit = {
					any_deposit = { has_deposit_category = deposit_cat_food }
					free_jobs < 4
				}
				random_deposit = {
					limit = { has_deposit_category = deposit_cat_food }
					clear_blocker = yes
				}
			}
		}
	}
}

# Scrub excess bureaucrat districts
country_event = {
	id = retile_ai.204
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		has_country_flag = retile_ai_needs_admin_excess
	}
	
	mean_time_to_happen = {
		months = 6
	}

	immediate = {
		random_owned_planet = {
			limit = { has_district = district_bureaucrats }
			remove_district = district_bureaucrats
		}
	}
}

# Scrub excess engineer districts
country_event = {
	id = retile_ai.205
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		OR = {
			has_monthly_income = { resource = energy value < -25 }
			has_monthly_income = { resource = minerals value < -25 }
			has_monthly_income = { resource = food value < -25 }
		}
	}
	
	mean_time_to_happen = {
		months = 6
	}

	immediate = {
		random_owned_planet = {
			limit = { has_district = district_engineers }
			remove_district = district_engineers
		}
	}
}

# Scrub excess custodian districts
planet_event = {
	id = retile_ai.206
	hide_window = yes

	trigger = {
		has_owner = yes
		owner = {
			is_ai = yes
			is_country_type = default
		}
		OR = {
			owner = { retile_ai_has_resource_crisis = yes }
			free_amenities < -300
		}
	}
	
	mean_time_to_happen = {
		months = 12
	}

	immediate = {
		remove_district = district_custodians
	}
}

# Scrub excess enforcer districts
planet_event = {
	id = retile_ai.207
	hide_window = yes

	trigger = {
		has_owner = yes
		owner = {
			is_ai = yes
			is_country_type = default
		}
		OR = {
			owner = { retile_ai_has_resource_crisis = yes }
			planet_crime < 1
		}
	}
	
	mean_time_to_happen = {
		months = 12
	}

	immediate = {
		remove_district = district_enforcers
	}
}

# Scrub excess soldier districts
planet_event = {
	id = retile_ai.208
	hide_window = yes

	trigger = {
		has_owner = yes
		owner = {
			is_ai = yes
			is_country_type = default
			OR = {
				retile_ai_has_resource_crisis = yes
				AND = {
					used_naval_capacity_percent < 0.7
					root = { num_districts = { type = district_soldiers value > 1 } }
				}
			}
		}
	}
	
	mean_time_to_happen = {
		months = 12
	}

	immediate = {
		remove_district = district_soldiers
	}
}

# Scrub excess scholar districts
country_event = {
	id = retile_ai.209
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		OR = {
			has_monthly_income = { resource = energy value < -25 }
			has_monthly_income = { resource = minerals value < -25 }
			has_monthly_income = { resource = food value < -25 }
			has_monthly_income = { resource = consumer_goods value < -25 }
			has_monthly_income = { resource = alloys value < -25 }
		}
	}
	
	mean_time_to_happen = {
		months = 6
	}

	immediate = {
		random_owned_planet = {
			limit = { has_district = district_scholars }
			remove_district = district_scholars
		}
	}
}

# Scrub excess housing districts
planet_event = {
	id = retile_ai.210
	hide_window = yes

	trigger = {
	has_owner = yes
		owner = {
			is_ai = yes
			is_country_type = default
		}
		free_district_slots < 1
		free_jobs < 1
		OR = {
			free_housing > 6
			count_pops = {
				limit = { is_unemployed = yes }
				count > 6
			}
		}
	}
	
	mean_time_to_happen = {
		months = 12
	}

	immediate = {
		remove_district = district_housing
	}
}

# slow down AI colonizer build
ship_event = {
	id = retile_ai.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_ship_class = shipclass_colonizer
			is_ship_class = shipclass_sponsored_colonizer
		}
	}

	immediate = {
		owner = { set_timed_country_flag = { flag = colony_ship_built days = 720 } }
	}
}


# Trade away energy at bad exchange rates, as needed.
country_event = {
	id = retile_ai.2000
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_resource = { type = energy amount > 25000 }
		#has_monthly_income = { resource = energy value > 90 }
		#OR = {
		#	has_resource = { type = minerals amount < 10000}
		#	has_resource = { type = food amount < 10000}
		#	has_resource = { type = alloys amount < 10000}
		#	has_resource = { type = consumer_goods amount < 10000}
		#}
	}
	
	mean_time_to_happen = {
		days = 30
	}

	after = {
		while = { # Resource Surplus Management
			limit = {
				has_resource = { type = energy amount > 25000 }
				OR = {
					has_resource = { type = minerals amount < 10000}
					has_resource = { type = food amount < 10000}
					has_resource = { type = alloys amount < 10000}
					has_resource = { type = consumer_goods amount < 10000}
				}
			}
			random_list = {
				10 = {	# Mineral Trades
					modifier = {
						factor = 0
						has_resource = { type = minerals amount >= 10000}
					}
					modifier = {
						factor = 2
						has_resource = { type = minerals amount < 5000 }
					}
					modifier = {
						factor = 5
						has_resource = { type = minerals amount < 1000 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = minerals value < 25 }
					}
					modifier = {
						factor = 10
						has_monthly_income = { resource = minerals value < 0 }
					}
					add_resource = { energy = -1000 }
					add_resource = { minerals = 500 }
				}
				10 = {	# Food Trades
					modifier = {
						factor = 0
						has_resource = { type = food amount >= 10000}
					}
					modifier = {
						factor = 2
						has_resource = { type = food amount < 5000 }
					}
					modifier = {
						factor = 5
						has_resource = { type = food amount < 1000 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = food value < 25 }
					}
					modifier = {
						factor = 10
						has_monthly_income = { resource = food value < 0 }
					}
					add_resource = { energy = -1000 }
					add_resource = { food = 125 }
				}
				10 = {	# Alloys Trades
					modifier = {
						factor = 0
						has_resource = { type = alloys amount >= 10000}
					}
					modifier = {
						factor = 2
						has_resource = { type = alloys amount < 5000 }
					}
					modifier = {
						factor = 5
						has_resource = { type = alloys amount < 1000 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = alloys value < 25 }
					}
					modifier = {
						factor = 10
						has_monthly_income = { resource = alloys value < 0 }
					}
					add_resource = { energy = -1000 }
					add_resource = { alloys = 125 }
				}
				10 = {	# Supplies Trades
					modifier = {
						factor = 0
						has_resource = { type = consumer_goods amount >= 10000}
					}
					modifier = {
						factor = 2
						has_resource = { type = consumer_goods amount < 5000 }
					}
					modifier = {
						factor = 5
						has_resource = { type = consumer_goods amount < 1000 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = consumer_goods value < 25 }
					}
					modifier = {
						factor = 10
						has_monthly_income = { resource = consumer_goods value < 0 }
					}
					add_resource = { energy = -1000 }
					add_resource = { consumer_goods = 125 }
				}
			}
		}
		while = { # Emergency Resource Purchases
			limit = {
				has_resource = { type = energy amount > 500 }
				has_monthly_income = { resource = energy value > 0 }
				OR = {
					AND = {
						has_resource = { type = minerals amount < 100 }
						has_monthly_income = { resource = minerals value < 0 }
					}
					AND = {
						has_resource = { type = food amount < 25 }
						has_monthly_income = { resource = food value < 0 }
					}
					AND = {
						has_resource = { type = consumer_goods amount < 25 }
						has_monthly_income = { resource = consumer_goods value < 0 }
					}
					AND = {
						has_resource = { type = alloys amount < 25 }
						has_monthly_income = { resource = alloys value < 0 }
					}
				}
			}
			random_list = {
				10 = {	# Mineral Trades
					modifier = {
						factor = 0
						OR = {
							has_resource = { type = minerals amount > 100 }
							has_monthly_income = { resource = minerals value > 0 }
						}
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = minerals value < -25 }
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = minerals value < -50 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = minerals value < -100 }
					}
					add_resource = { energy = -200 }
					add_resource = { minerals = 100 }
				}
				10 = {	# Food Trades
					modifier = {
						factor = 0
						OR = {
							has_resource = { type = food amount > 25 }
							has_monthly_income = { resource = food value > 0 }
						}
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = food value < -5 }
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = food value < -10 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = food value < -25 }
					}
					add_resource = { energy = -200 }
					add_resource = { food = 25 }
				}
				3 = {	# Supplies Trades
					modifier = {
						factor = 0
						OR = {
							has_resource = { type = consumer_goods amount > 25 }
							has_monthly_income = { resource = consumer_goods value > 0 }
						}
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = consumer_goods value < -5 }
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = consumer_goods value < -10 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = consumer_goods value < -25 }
					}
					add_resource = { energy = -200 }
					add_resource = { consumer_goods = 25 }
				}
				3 = {	# Alloys Trades
					modifier = {
						factor = 0
						OR = {
							has_resource = { type = alloys amount > 25 }
							has_monthly_income = { resource = alloys value > 0 }
						}
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = alloys value < -5 }
					}
					modifier = {
						factor = 2
						has_monthly_income = { resource = alloys value < -10 }
					}
					modifier = {
						factor = 5
						has_monthly_income = { resource = alloys value < -25 }
					}
					add_resource = { energy = -200 }
					add_resource = { alloys = 25 }
				}
			}
		}
	}
}

# Trade away minerals at bad exchange rates, as needed.
country_event = {
	id = retile_ai.2001
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_resource = { type = minerals amount > 15000 }
		#has_resource = { type = energy amount < 50000 }
		#has_monthly_income = { resource = minerals value > 90 }
	}
	
	mean_time_to_happen = {
		days = 30
	}

	after = {
		while = {	# Resource Surplus Management
			limit = {
				has_resource = { type = minerals amount > 15000 }
				has_resource = { type = energy amount < 50000 }
			}
			add_resource = { minerals = -1000 }
			add_resource = { energy = 500 }
		}
		while = {	# Emergency Resource Trades
			limit = {
				has_resource = { type = minerals amount > 500 }
				has_resource = { type = energy amount < 1000 }
				has_monthly_income = { resource = minerals value > 0 }
				OR = {
					AND = {
						has_resource = { type = food amount < 25 }
						has_monthly_income = { resource = food value < 0 }
					}
					AND = {
						has_resource = { type = consumer_goods amount < 25 }
						has_monthly_income = { resource = consumer_goods value < 0 }
					}
					AND = {
						has_resource = { type = alloys amount < 25 }
						has_monthly_income = { resource = alloys value < 0 }
					}
				}
			}
			add_resource = { minerals = -200 }
			add_resource = { energy = 100 }
		}
	}
}

# Trade away food at bad exchange rates, as needed.
country_event = {
	id = retile_ai.2002
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_resource = { type = food amount > 15000 }
		#has_resource = { type = energy amount < 50000 }
		#has_monthly_income = { resource = food value > 20 }
	}
	
	mean_time_to_happen = {
		days = 30
	}

	after = {
		while = {	# Resource Surplus Management
			limit = {
				has_resource = { type = food amount > 15000 }
				has_resource = { type = energy amount < 50000 }
			}
			add_resource = { food = -250 }
			add_resource = { energy = 500 }
		}
		while = {	# Emergency Resource Trades
			limit = {
				has_resource = { type = food amount > 100 }
				has_resource = { type = energy amount < 1000 }
				has_monthly_income = { resource = food value > 0 }
				OR = {
					AND = {
						has_resource = { type = minerals amount < 100 }
						has_monthly_income = { resource = minerals value < 0 }
					}
					AND = {
						has_resource = { type = consumer_goods amount < 25 }
						has_monthly_income = { resource = consumer_goods value < 0 }
					}
					AND = {
						has_resource = { type = alloys amount < 25 }
						has_monthly_income = { resource = alloys value < 0 }
					}
				}
			}
			add_resource = { minerals = -50 }
			add_resource = { energy = 100 }
		}
	}
}

# Trade away supplies at bad exchange rates, as needed.
country_event = {
	id = retile_ai.2003
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_resource = { type = consumer_goods amount > 15000 }
		#has_resource = { type = energy amount < 50000 }
		#has_monthly_income = { resource = consumer_goods value > 20 }
	}
	
	mean_time_to_happen = {
		days = 30
	}

	after = {
		while = {	# Resource Surplus Management
			limit = {
				has_resource = { type = consumer_goods amount > 15000 }
				has_resource = { type = energy amount < 50000 }
			}
			add_resource = { consumer_goods = -250 }
			add_resource = { energy = 500 }
		}
		while = {	# Emergency Resource Trades
			limit = {
				has_resource = { type = consumer_goods amount > 100 }
				has_resource = { type = energy amount < 1000 }
				has_monthly_income = { resource = consumer_goods value > 0 }
				OR = {
					AND = {
						has_resource = { type = minerals amount < 100 }
						has_monthly_income = { resource = minerals value < 0 }
					}
					AND = {
						has_resource = { type = food amount < 25 }
						has_monthly_income = { resource = food value < 0 }
					}
					AND = {
						has_resource = { type = alloys amount < 25 }
						has_monthly_income = { resource = alloys value < 0 }
					}
				}
			}
			add_resource = { consumer_goods = -50 }
			add_resource = { energy = 100 }
		}
	}
}

# Trade away alloys at bad exchange rates, as needed.
country_event = {
	id = retile_ai.2004
	hide_window = yes

	trigger = {
		is_ai = yes
		is_country_type = default
		#has_resource = { type = alloys amount > 25000 }
		#has_resource = { type = energy amount < 50000 }
		#has_monthly_income = { resource = alloys value > 20 }
	}
	
	mean_time_to_happen = {
		days = 30
	}

	after = {
		while = {	# Resource Surplus Management
			limit = {
				has_resource = { type = alloys amount > 25000 }
				has_resource = { type = energy amount < 50000 }
			}
			add_resource = { alloys = -250 }
			add_resource = { energy = 500 }
		}
		while = {	# Emergency Resource Trades
			limit = {
				has_resource = { type = alloys amount > 100 }
				has_resource = { type = energy amount < 1000 }
				has_monthly_income = { resource = alloys value > 0 }
				OR = {
					AND = {
						has_resource = { type = minerals amount < 100 }
						has_monthly_income = { resource = minerals value < 0 }
					}
					AND = {
						has_resource = { type = food amount < 25 }
						has_monthly_income = { resource = food value < 0 }
					}
					AND = {
						has_resource = { type = consumer_goods amount < 25 }
						has_monthly_income = { resource = consumer_goods value < 0 }
					}
				}
			}
			add_resource = { alloys = -50 }
			add_resource = { energy = 100 }
		}
	}
}