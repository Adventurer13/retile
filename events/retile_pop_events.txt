#########################################
#
# Retile Pop Events
# Author: Gebnar
#
#########################################

#########################################
### Pop Job Searching

namespace = retile_pop

# Pops look for work about once per month...
pop_event = {
	id = retile_pop.1
	hide_window = yes

	trigger = {
		always = yes
	}

	mean_time_to_happen = {
		days = 30
	}

	immediate = {
		set_timed_pop_flag = { flag = retile_pop_lfw days = 3 }
	}
}

############################################
### Regular Pop Migration

# Planet needs to migrate a pop for some reason. Choose a preferable pop at random.
# THIS = planet
planet_event = {
	id = retile_pop.90
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { always = yes }
	
	immediate = {
		random_owned_pop = {
			limit = { NOT = { has_citizenship_type = { type = citizenship_organic_trophy } } }
			weights = {
				base = 1
				modifier = { add = 20 is_plantoid = no root = { habitability = { who = prev value <= 0 } } }
				modifier = { add = 19 is_plantoid = no root = { habitability = { who = prev value <= 0.05 } } }
				modifier = { add = 18 is_plantoid = no root = { habitability = { who = prev value <= 0.10 } } }
				modifier = { add = 17 is_plantoid = no root = { habitability = { who = prev value <= 0.15 } } }
				modifier = { add = 16 is_plantoid = no root = { habitability = { who = prev value <= 0.20 } } }
				modifier = { add = 15 is_plantoid = no root = { habitability = { who = prev value <= 0.25 } } }
				modifier = { add = 14 is_plantoid = no root = { habitability = { who = prev value <= 0.30 } } }
				modifier = { add = 13 is_plantoid = no root = { habitability = { who = prev value <= 0.35 } } }
				modifier = { add = 12 is_plantoid = no root = { habitability = { who = prev value <= 0.40 } } }
				modifier = { add = 11 is_plantoid = no root = { habitability = { who = prev value <= 0.45 } } }
				modifier = { add = 10 is_plantoid = no root = { habitability = { who = prev value <= 0.50 } } }
				modifier = { add = 9 is_plantoid = no root = { habitability = { who = prev value <= 0.55 } } }
				modifier = { add = 8 is_plantoid = no root = { habitability = { who = prev value <= 0.60 } } }
				modifier = { add = 7 is_plantoid = no root = { habitability = { who = prev value <= 0.65 } } }
				modifier = { add = 6 is_plantoid = no root = { habitability = { who = prev value <= 0.70 } } }
				modifier = { add = 5 is_plantoid = no root = { habitability = { who = prev value <= 0.75 } } }
				modifier = { add = 4 is_plantoid = no root = { habitability = { who = prev value <= 0.80 } } }
				modifier = { add = 3 is_plantoid = no root = { habitability = { who = prev value <= 0.85 } } }
				modifier = { add = 2 is_plantoid = no root = { habitability = { who = prev value <= 0.90 } } }
				modifier = { add = 1 is_plantoid = no root = { habitability = { who = prev value <= 0.95 } } }
			}
			pop_event = { id = retile_pop.91 }
		}
	}
}

# A pop has been chosen to migrate. Choose a preferable destination at random.
# THIS = pop
# FROM = planet
pop_event = {
	id = retile_pop.91
	hide_window = yes
	is_triggered_only = yes

	trigger = { always = yes }
	
	immediate = {
		owner = { random_owned_planet = {
			limit = {
				free_housing > 0
				NOT = { has_modifier = penal_colony }
				is_under_colonization = no
				NOT = { is_same_value = FROM }
				is_occupied_flag = no
				has_orbital_bombardment = no
			}
			weights = {
				base = 1
				modifier = { add = 1 habitability = { who = root value >= 0.05 } }
				modifier = { add = 2 habitability = { who = root value >= 0.10 } }
				modifier = { add = 3 habitability = { who = root value >= 0.15 } }
				modifier = { add = 4 habitability = { who = root value >= 0.20 } }
				modifier = { add = 5 habitability = { who = root value >= 0.25 } }
				modifier = { add = 6 habitability = { who = root value >= 0.30 } }
				modifier = { add = 7 habitability = { who = root value >= 0.35 } }
				modifier = { add = 8 habitability = { who = root value >= 0.40 } }
				modifier = { add = 9 habitability = { who = root value >= 0.45 } }
				modifier = { add = 10 habitability = { who = root value >= 0.50 } }
				modifier = { add = 11 habitability = { who = root value >= 0.55 } }
				modifier = { add = 12 habitability = { who = root value >= 0.60 } }
				modifier = { add = 13 habitability = { who = root value >= 0.65 } }
				modifier = { add = 14 habitability = { who = root value >= 0.70 } }
				modifier = { add = 15 habitability = { who = root value >= 0.75 } }
				modifier = { add = 16 habitability = { who = root value >= 0.80 } }
				modifier = { add = 17 habitability = { who = root value >= 0.85 } }
				modifier = { add = 18 habitability = { who = root value >= 0.90 } }
				modifier = { add = 19 habitability = { who = root value >= 0.95 } }
				modifier = { add = 20 habitability = { who = root value >= 1.00 } }
				modifier = { mult = 2 free_jobs > 0 }
			}
			resettle_pop = { pop = root planet = this}
		} }
	}
}


# Migrate periodically if housing is full.
planet_event = {
	id = retile_pop.100
	hide_window = yes

	pre_triggers = { has_owner = yes }
	
	trigger = {
		num_pops > 1
		is_under_colonization = no
		has_orbital_bombardment = no
		is_occupied_flag = no
		OR = {
			free_housing < 0
			#free_jobs < 0	# doesn't work... :(
			AND = {
				owner = { is_ai = no }
				any_owned_pop = { is_unemployed = yes }
			}
		}
		owner = { is_country_type = default }	# don't bother with non-playable countries. Also it's safer.
		NOT = { has_modifier = penal_colony }
	}

	mean_time_to_happen = {
		days = 90
	}

	immediate = {
		planet_event = { id = retile_pop.90 }
	}
}

# Migrate immediately on pop growth if there's no room
# This = Planet scope
# From = Country
# FromFrom = Pop
planet_event = {
	id = retile_pop.101
	hide_window = yes
	is_triggered_only = yes

	trigger = { always = yes }

	immediate = {
		if = {
			limit = {
				num_pops > 1
				exists = owner
				owner = { is_country_type = default }	# don't bother with non-playable countries. Also it's safer.
				OR = {
					free_housing < 1
					free_jobs < 1
				}
				NOT = { has_modifier = penal_colony }
				is_occupied_flag = no
				has_orbital_bombardment = no
			}
			planet_event = { id = retile_pop.90 }
		}
	}
}

############################################
### Pop shuffling migration

# new version - based on retile_pop.91
pop_event = {
	id = retile_pop.110
	hide_window = yes

	trigger = {
		exists = planet
		planet = {
			NOT = { has_planet_flag = retile_recent_shuffling }
			num_pops > 1
		}
		exists = owner
		owner = { num_owned_planets > 1 }
	}
	
	mean_time_to_happen = { days = 360 } # check about once/year
	
	immediate = {
		random_list = {
			50 = { # wait about 5 years under normal circumstances
				modifier = {	# plantoids think about it more like every 20 years...
					add = 150
					is_plantoid = yes
				}
				modifier = {	# high habitability - check less often
					factor = 2
					is_plantoid = no
					planet = { habitability = { who = root value > 0.90 } }
				}
				modifier = {
					factor = 2
					is_plantoid = no
					planet = { habitability = { who = root value > 0.70 } }
				}
				modifier = {	# low habitability - check more often
					factor = 0.5
					is_plantoid = no
					planet = { habitability = { who = root value < 0.50 } }
				}
				modifier = {
					factor = 0.5
					is_plantoid = no
					planet = { habitability = { who = root value < 0.25 } }
				}
				modifier = {
					factor = 0.5
					is_plantoid = no
					planet = { habitability = { who = root value < 0.10 } }
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						planet = { OR = {	# regular migration conditions
							has_modifier = penal_colony
							is_under_colonization = yes
							is_occupied_flag = yes
							has_orbital_bombardment = yes
						} }
						AND = { # farming plantoids NEVER migrate this way...
							is_plantoid = yes
							has_job = farmer
						}
					}
				}
				planet = {	# planet can only give up 1 pop per year to shuffling.
					set_timed_planet_flag = { flag = retile_recent_shuffling days = 360 }
				}
				owner = { random_owned_planet = {
					limit = {
						free_housing >= 0	# care less about housing with this - we're going to fire the migrate event afterward if housing is low...
						NOT = { has_modifier = penal_colony }
						is_under_colonization = no
						NOT = { is_same_value = FROM }
						is_occupied_flag = no
						has_orbital_bombardment = no
					}
					weights = {
						base = 1
						modifier = { add = 1 habitability = { who = root value >= 0.05 } }
						modifier = { add = 2 habitability = { who = root value >= 0.10 } }
						modifier = { add = 3 habitability = { who = root value >= 0.15 } }
						modifier = { add = 4 habitability = { who = root value >= 0.20 } }
						modifier = { add = 5 habitability = { who = root value >= 0.25 } }
						modifier = { add = 6 habitability = { who = root value >= 0.30 } }
						modifier = { add = 7 habitability = { who = root value >= 0.35 } }
						modifier = { add = 8 habitability = { who = root value >= 0.40 } }
						modifier = { add = 9 habitability = { who = root value >= 0.45 } }
						modifier = { add = 10 habitability = { who = root value >= 0.50 } }
						modifier = { add = 11 habitability = { who = root value >= 0.55 } }
						modifier = { add = 12 habitability = { who = root value >= 0.60 } }
						modifier = { add = 13 habitability = { who = root value >= 0.65 } }
						modifier = { add = 14 habitability = { who = root value >= 0.70 } }
						modifier = { add = 15 habitability = { who = root value >= 0.75 } }
						modifier = { add = 16 habitability = { who = root value >= 0.80 } }
						modifier = { add = 17 habitability = { who = root value >= 0.85 } }
						modifier = { add = 18 habitability = { who = root value >= 0.90 } }
						modifier = { add = 19 habitability = { who = root value >= 0.95 } }
						modifier = { add = 20 habitability = { who = root value >= 1.00 } }
						modifier = { mult = 2 free_jobs > 0 }
						modifier = { mult = 2 free_housing > 0 }
					}
					resettle_pop = { pop = root planet = this}
					
					# immediately fire the periodic migration script, in case we're now over housing or something...
					planet_event = { id = retile_pop.100 }
				} }
			}
		}
	}
}

# Swap-migrate eligible pops to improve overall habitability.
# OLD VERSION - NO LONGER ENABLED
# THIS = pop
pop_event = {
	id = retile_pop.111
	hide_window = yes
	
	trigger = {
		always = no
		is_plantoid = no
		planet = {
			habitability = { who = root value < 50 }
		}
	}

	mean_time_to_happen = {
		days = 1800
	}
	
	after = {
		if = {
			limit = {
				exists = owner
				owner = { is_country_type = default }
				exists = planet
				planet = {
					NOT = { has_modifier = penal_colony }
					is_under_colonization = no
					is_occupied_flag = no
					has_orbital_bombardment = no
					habitability = { who = root value < 50 }
				}
			}
			owner = { random_owned_pop = {
				limit = {
					exists = owner
					owner = { is_country_type = default }
					is_plantoid = no
					exists = planet
					planet = {
						NOT = { is_same_value = root.planet }
						NOT = { has_modifier = penal_colony }
						is_under_colonization = no
						is_occupied_flag = no
						has_orbital_bombardment = no
						habitability = { who = prev value < 50 }
						habitability = { who = root value >= 70 }
					}
					root.planet = {
						habitability = { who = prev value >= 70 }
					}
				}
				root.planet = { save_event_target_as = RootPlanet }
				resettle_pop = { pop = root planet = this.planet }
				resettle_pop = { pop = this planet = EventTarget:RootPlanet }
			} }
		}
	}
}

############################################
### Pop Sprawl

# apply an appropriate pop growth malus to each empire based on the number of planets it has.
country_event = {
	id = retile_pop.200
	hide_window = yes

	trigger = {
		OR = {
			is_country_type = default
			is_country_type = awakened_marauders
			is_country_type = awakened_fallen_empire
		}
		not = { has_country_flag = growth_malus_cleared }
	}

	mean_time_to_happen = {
		days = 90
	}

	after = {
		retile_clear_growth_malus = yes
		set_country_flag = growth_malus_cleared
		#retile_apply_growth_malus = yes
	}
}

############################################
### Planet Abandonment

planet_event = { # retile_abandon_migrate
	id = retile_pop.1002
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = yes
	}
	
	immediate = {
		random_owned_pop = {
			weights = {
				base = 1
				modifier = {
					add = 30
					is_same_species = owner.owner_species
				}
				modifier = {
					add = 20
					is_pop_category = ruler
				}
				modifier = {
					add = 10
					is_pop_category = specialist
				}
			}
			random_list = {
				0 = { # refugee event
					modifier = {
						add = 10
						is_valid_refugee_pop = yes
					}
					modifier = {
						factor = 7
						NOR = {
							is_pop_category = ruler
							is_pop_category = specialist
							is_same_species = owner.owner_species
						}
					}
					modifier = {
						factor = 3
						is_pop_category = specialist
					}
					save_event_target_as = refugee_pop #Must be saved for refugee_pop_effect to work
					refugee_pop_effect = yes					
				}
				0 = { # resettle inside border
					modifier = {
						add = 10
						owner = { any_planet_within_border = {
							NOT = { is_same_value = root }
							is_under_colonization = no
							free_housing > 0
						} }
					}
					modifier = {
						factor = 7
						OR = {
							is_pop_category = ruler
							is_same_species = owner.owner_species
						}
					}
					modifier = {
						factor = 3
						is_pop_category = specialist
					}
					owner = { random_owned_planet = {
						limit = {
							free_housing > 0
							is_under_colonization = no
							NOT = { is_same_value = root }
						}
						resettle_pop = { pop = prevprev planet = this }
					} }
				}
				0 = {
					modifier = {
						add = 50
						is_valid_refugee_pop = no
						NOT = { owner = { any_planet_within_border = {
								NOT = { is_same_value = root.planet }
								is_under_colonization = no
								free_housing > 0
						} } }
					}
					kill_pop = yes
				}
			}
		}
	}
}

pop_event = { # retile_abandon_migrate
	id = retile_pop.1000
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = yes
	}
	
	immediate = {
		random_list = {
			0 = { # refugee event
				modifier = {
					add = 50
					is_valid_refugee_pop = yes
				}
				save_event_target_as = refugee_pop #Must be saved for refugee_pop_effect to work
				refugee_pop_effect = yes					
			}
			0 = { # resettle inside border
				modifier = {
					add = 50
					owner = { any_planet_within_border = {
						NOT = { is_same_value = root.planet }
						is_under_colonization = no
						free_housing > 0
					} }
				}
				owner = { random_owned_planet = {
					limit = {
						free_housing > 0
						is_under_colonization = no
					}
					resettle_pop = { pop = root planet = this }
				} }
			}
			0 = {
				modifier = {
					add = 50
					is_valid_refugee_pop = no
					NOT = { owner = { any_planet_within_border = {
							NOT = { is_same_value = root.planet }
							is_under_colonization = no
							free_housing > 0
					} } }
				}
				kill_pop = yes
			}
		}
	}
}

pop_event = { # retile_abandon_migrate_outside_border
	id = retile_pop.1001
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		always = yes
	}
	
	immediate = {
		if = {
			limit = { is_valid_refugee_pop = yes }
			save_event_target_as = refugee_pop #Must be saved for refugee_pop_effect to work
			refugee_pop_effect = yes
		} else = {
			kill_pop = yes
		}
	}
}
